% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jags_functions.R
\name{get_mcmc_samples}
\alias{get_mcmc_samples}
\title{Mcmc samples}
\usage{
get_mcmc_samples(
  data,
  id_application,
  id_voter,
  grade_variable,
  path_to_jags_model = NULL,
  n_chains = 4,
  n_iter = 5000,
  n_burnin = 1000,
  n_adapt = 1000,
  id_section = NULL,
  max_iter = 1e+06,
  theta_name = "application_intercept",
  tau_name = "tau_application",
  sigma_name = "sigma",
  tau_voter_name = "tau_voter",
  tau_section_name = "tau_section",
  rank_theta_name = "rank_theta",
  voter_name = "voter_intercept",
  ordinal_scale = FALSE,
  point_scale = NULL,
  heterogeneous_residuals = FALSE,
  seed = 1991,
  quiet = FALSE,
  dont_bind = FALSE,
  inits_type = "random",
  variables_to_sample = "default",
  names_variables_to_sample = NULL,
  initial_values = NULL,
  compute_ess = FALSE,
  maximal_testing = FALSE,
  rhat_threshold = 1.01
)
}
\arguments{
\item{data}{long data frame with all information as in the jags model
defined below.}

\item{id_application}{the name of the application variable in the data}

\item{id_voter}{the name of the voter variable in the data (default = NULL)}

\item{grade_variable}{the name of the outcome variable}

\item{path_to_jags_model}{the path to the jags txt file, if null, the
default model is used. (default = NULL)}

\item{n_chains}{number of chains for the JAGS sampler. The default number of
chains is set to four. This creates optimal conditions and should not be
changed.}

\item{n_iter}{how many iterations used in the JAGS sampler?
(default = 5000)}

\item{n_burnin}{number of burnin iterations discarded. (default = 1000)}

\item{n_adapt}{number of iterations discarded for the adaptation phase.
(default = 1000)}

\item{id_section}{name of the section}

\item{max_iter}{maximum number of iteration (default = 1 million)}

\item{theta_name}{the name of the application identifier in the JAGS model.
(default = application_intercept")}

\item{tau_name}{name of the tau in the jags model, being the standard error
of the application effects (default = tau_application).}

\item{sigma_name}{name of the standard deviation of the full model.
(default = sigma)}

\item{tau_voter_name}{name of the standard error of the voter effect
(default = tau_voter).}

\item{tau_section_name}{name of the standard error of the section effect, if
needed (default = tau_section).}

\item{rank_theta_name}{the name of the rank of theta in the JAGS model
(default = rank_theta)}

\item{voter_name}{the name of the voter intercept in the JAGS model (default
= voter_intercept).}

\item{ordinal_scale}{dummy variable informing us on whether or not the
outcome is on an ordinal scale (default = FALSE)}

\item{point_scale}{integer informing us on the number of points of the
ordinal scale; not needed for continuous scale (default = NULL)}

\item{heterogeneous_residuals}{dummy variable informing us on whether or not
the residuals should be heterogeneous (in this case you have to update the
JAGS model too, default = FALSE)}

\item{seed}{set a seed for the JAGS model (default = 1991)}

\item{quiet}{if the default model is used this function generates a warning.
if quiet = TRUE, this warning is not shown}

\item{dont_bind}{if TRUE the different chains are not pooled, and the MCMC
object is returned as it is (default = FALSE).}

\item{inits_type}{type of the initial values, default is "random", but if two
chains are used, the initial values can also be  "overdispersed"}

\item{variables_to_sample}{should the default variables be samples, or will
they be "specified" (in names_variables_to_sample), default is "default".}

\item{names_variables_to_sample}{if variables to sample are specified, write
their names here, as a character-vector, default is NULL.}

\item{initial_values}{The list of initial values for the jags sampler can be
provided directly}

\item{compute_ess}{Should the effective sample size and the mcmc errors be
calculated? (default = FALSE)}

\item{maximal_testing}{should the rhat of all parameters be computed (TRUE),
or just the essential ones (FALSE)? (default = FALSE)}

\item{rhat_threshold}{the threshold for rhat to decide whether or not the
chains converged. Gelman suggested 1.1, but the smaller the better
(default = 1.01).}
}
\value{
The function returns a list with: a matrix with the samples for all
 parameters defined in the model, and more information on the number of
 chains, and the length of the adaptation, iteration and burnin phase, and
 an indicator on whether or not the chains converged (according to Rhat being
 smaller than `rhat_threshold`). Note that n_iter, burnin, adapt are the
 number per chain. Then, optionally the effective sample size (ess) for the
 relevant parameters is calculated as well as the MCMC error
 (= sd(parameter)/sqrt(ess)) and added to the list.
}
\description{
Helper function to get the mcmc samples. The function tests convergence
diagnostics at the same time. Find more in Details.
}
\details{
Note that a convergence test is applied in this function: If with
the specified length of adaptation and burnin phase together with the number
of specified iterations not all Rhat values are below `rhat_threshold`, the
latter Ns (n_adapt, n_burnin, and n_iter) are multiplied by multiplied by 5,
10, 5x10, 10x10, 5x10^2, 10x10^2, etc, until either all Rhat values are
below `rhat_threshold`or the number of iteration would exceed max_iter. If
the Rhat values are still not all small enough a warning message is printed.
}
\examples{
data_panel1 <- get_mock_data() \%>\%
     filter(panel == "p1")
\dontrun{
mcmc_samples <- get_mcmc_samples(data = data_panel1,
                                 id_application = "application",
                                 id_voter = "voter",
                                 grade_variable = "num_grade")
                                 }
}
